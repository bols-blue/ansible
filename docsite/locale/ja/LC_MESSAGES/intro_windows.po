# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013 Ansible, Inc
# This file is distributed under the same license as the Ansible Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ansible Documentation 0.01\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-04-17 17:09+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../rst/intro_windows.rst:2
msgid "Windows Support"
msgstr ""

#: ../../../rst/intro_windows.rst:0
msgid "Topics"
msgstr ""

#: ../../../rst/intro_windows.rst:9
msgid "Windows: How Does It Work"
msgstr ""

#: ../../../rst/intro_windows.rst:11
msgid "As you may have already read, Ansible manages Linux/Unix machines using SSH by default."
msgstr ""

#: ../../../rst/intro_windows.rst:13
msgid "Starting in version 1.7, Ansible also contains support for managing Windows machines.  This uses native PowerShell remoting, rather than SSH."
msgstr ""

#: ../../../rst/intro_windows.rst:16
msgid "Ansible will still be run from a Linux control machine, and uses the \"winrm\" Python module to talk to remote hosts."
msgstr ""

#: ../../../rst/intro_windows.rst:18
msgid "No additional software needs to be installed on the remote machines for Ansible to manage them, it still maintains the agentless properties that make it popular on Linux/Unix."
msgstr ""

#: ../../../rst/intro_windows.rst:20
msgid "Note that it is expected you have a basic understanding of Ansible prior to jumping into this section, so if you haven't written a Linux playbook first, it might be worthwhile to dig in there first."
msgstr ""

#: ../../../rst/intro_windows.rst:25
msgid "Installing on the Control Machine"
msgstr ""

#: ../../../rst/intro_windows.rst:27
msgid "On a Linux control machine::"
msgstr ""

#: ../../../rst/intro_windows.rst:31
msgid "If you wish to connect to domain accounts published through Active Directory (as opposed to local accounts created on the remote host)::"
msgstr ""

#: ../../../rst/intro_windows.rst:35
msgid "Kerberos is installed and configured by default on OS X and many Linux distributions. If your control machine has not already done this for you, you will need to."
msgstr ""

#: ../../../rst/intro_windows.rst:40
msgid "Inventory"
msgstr ""

#: ../../../rst/intro_windows.rst:42
msgid "Ansible's windows support relies on a few standard variables to indicate the username, password, and connection type (windows) of the remote hosts.  These variables are most easily set up in inventory.  This is used instead of SSH-keys or passwords as normally fed into Ansible::"
msgstr ""

#: ../../../rst/intro_windows.rst:48
msgid "In group_vars/windows.yml, define the following inventory variables::"
msgstr ""

#: ../../../rst/intro_windows.rst:58
msgid "Notice that the ssh_port is not actually for SSH, but this is a holdover variable name from how Ansible is mostly an SSH-oriented system.  Again, Windows management will not happen over SSH."
msgstr ""

#: ../../../rst/intro_windows.rst:60
msgid "If you have installed the ``kerberos`` module and ``ansible_ssh_user`` contains ``@`` (e.g. ``username@realm``), Ansible will first attempt Kerberos authentication. *This method uses the principal you are authenticated to Kerberos with on the control machine and not ``ansible_ssh_user``*. If that fails, either because you are not signed into Kerberos on the control machine or because the corresponding domain account on the remote host is not available, then Ansible will fall back to \"plain\" username/password authentication."
msgstr ""

#: ../../../rst/intro_windows.rst:62
msgid "When using your playbook, don't forget to specify --ask-vault-pass to provide the password to unlock the file."
msgstr ""

#: ../../../rst/intro_windows.rst:64
msgid "Test your configuration like so, by trying to contact your Windows nodes.  Note this is not an ICMP ping, but tests the Ansible communication channel that leverages Windows remoting::"
msgstr ""

#: ../../../rst/intro_windows.rst:69
msgid "If you haven't done anything to prep your systems yet, this won't work yet.  This is covered in a later section about how to enable PowerShell remoting - and if necessary - how to upgrade PowerShell to a version that is 3 or higher."
msgstr ""

#: ../../../rst/intro_windows.rst:73
msgid "You'll run this command again later though, to make sure everything is working."
msgstr ""

#: ../../../rst/intro_windows.rst:78
msgid "Windows System Prep"
msgstr ""

#: ../../../rst/intro_windows.rst:80
msgid "In order for Ansible to manage your windows machines, you will have to enable PowerShell remoting configured."
msgstr ""

#: ../../../rst/intro_windows.rst:82
msgid "To automate setup of WinRM, you can run `this PowerShell script <https://github.com/ansible/ansible/blob/devel/examples/scripts/ConfigureRemotingForAnsible.ps1>`_ on the remote machine."
msgstr ""

#: ../../../rst/intro_windows.rst:84
msgid "Admins may wish to modify this setup slightly, for instance to increase the timeframe of the certificate."
msgstr ""

#: ../../../rst/intro_windows.rst:90
msgid "Getting to PowerShell 3.0 or higher"
msgstr ""

#: ../../../rst/intro_windows.rst:92
msgid "PowerShell 3.0 or higher is needed for most provided Ansible modules for Windows, and is also required to run the above setup script. Note that PowerShell 3.0 is only supported on Windows 7 SP1, Windows Server 2008 SP1, and later releases of Windows."
msgstr ""

#: ../../../rst/intro_windows.rst:94
msgid "Looking at an ansible checkout, copy the `examples/scripts/upgrade_to_ps3.ps1 <https://github.com/cchurch/ansible/blob/devel/examples/scripts/upgrade_to_ps3.ps1>`_ script onto the remote host and run a PowerShell console as an administrator.  You will now be running PowerShell 3 and can try connectivity again using the win_ping technique referenced above."
msgstr ""

#: ../../../rst/intro_windows.rst:99
msgid "What modules are available"
msgstr ""

#: ../../../rst/intro_windows.rst:101
msgid "Most of the Ansible modules in core Ansible are written for a combination of Linux/Unix machines and arbitrary web services, though there are various Windows modules as listed in the `\"windows\" subcategory of the Ansible module index <http://docs.ansible.com/list_of_windows_modules.html>`_."
msgstr ""

#: ../../../rst/intro_windows.rst:104
msgid "Browse this index to see what is available."
msgstr ""

#: ../../../rst/intro_windows.rst:106
msgid "In many cases, it may not be necessary to even write or use an Ansible module."
msgstr ""

#: ../../../rst/intro_windows.rst:108
msgid "In particular, the \"script\" module can be used to run arbitrary PowerShell scripts, allowing Windows administrators familiar with PowerShell a very native way to do things, as in the following playbook::"
msgstr ""

#: ../../../rst/intro_windows.rst:114
msgid "Note there are a few other Ansible modules that don't start with \"win\" that also function, including \"slurp\", \"raw\", and \"setup\" (which is how fact gathering works)."
msgstr ""

#: ../../../rst/intro_windows.rst:119
msgid "Developers: Supported modules and how it works"
msgstr ""

#: ../../../rst/intro_windows.rst:121
msgid "Developing ansible modules are covered in a `later section of the documentation <http://developing_modules.html>`_, with a focus on Linux/Unix. What if you want to write Windows modules for ansible though?"
msgstr ""

#: ../../../rst/intro_windows.rst:124
msgid "For Windows, ansible modules are implemented in PowerShell.  Skim those Linux/Unix module development chapters before proceeding."
msgstr ""

#: ../../../rst/intro_windows.rst:126
msgid "Windows modules live in a \"windows/\" subfolder in the Ansible \"library/\" subtree.  For example, if a module is named \"library/windows/win_ping\", there will be embedded documentation in the \"win_ping\" file, and the actual PowerShell code will live in a \"win_ping.ps1\" file.  Take a look at the sources and this will make more sense."
msgstr ""

#: ../../../rst/intro_windows.rst:129
msgid "Modules (ps1 files) should start as follows::"
msgstr ""

#: ../../../rst/intro_windows.rst:139
msgid "The above magic is necessary to tell Ansible to mix in some common code and also know how to push modules out.  The common code contains some nice wrappers around working with hash data structures and emitting JSON results, and possibly a few more useful things.  Regular Ansible has this same concept for reusing Python code - this is just the windows equivalent."
msgstr ""

#: ../../../rst/intro_windows.rst:141
msgid "What modules you see in windows/ are just a start.  Additional modules may be submitted as pull requests to github."
msgstr ""

#: ../../../rst/intro_windows.rst:146
msgid "Reminder: You Must Have a Linux Control Machine"
msgstr ""

#: ../../../rst/intro_windows.rst:148
msgid "Note running Ansible from a Windows control machine is NOT a goal of the project.  Refrain from asking for this feature, as it limits what technologies, features, and code we can use in the main project in the future.  A Linux control machine will be required to manage Windows hosts."
msgstr ""

#: ../../../rst/intro_windows.rst:152
msgid "Cygwin is not supported, so please do not ask questions about Ansible running from Cygwin."
msgstr ""

#: ../../../rst/intro_windows.rst:157
msgid "Windows Facts"
msgstr ""

#: ../../../rst/intro_windows.rst:159
msgid "Just as with Linux/Unix, facts can be gathered for windows hosts, which will return things such as the operating system version.  To see what variables are available about a windows host, run the following::"
msgstr ""

#: ../../../rst/intro_windows.rst:163
msgid "Note that this command invocation is exactly the same as the Linux/Unix equivalent."
msgstr ""

#: ../../../rst/intro_windows.rst:168
msgid "Windows Playbook Examples"
msgstr ""

#: ../../../rst/intro_windows.rst:170
msgid "Look to the list of windows modules for most of what is possible, though also some modules like \"raw\" and \"script\" also work on Windows, as do \"fetch\" and \"slurp\"."
msgstr ""

#: ../../../rst/intro_windows.rst:172
msgid "Here is an example of pushing and running a PowerShell script::"
msgstr ""

#: ../../../rst/intro_windows.rst:180
msgid "Running individual commands uses the 'raw' module, as opposed to the shell or command module as is common on Linux/Unix operating systems::"
msgstr ""

#: ../../../rst/intro_windows.rst:190
msgid "And for a final example, here's how to use the win_stat module to test for file existence.  Note that the data returned by the win_stat module is slightly different than what is provided by the Linux equivalent::"
msgstr ""

#: ../../../rst/intro_windows.rst:209
msgid "Again, recall that the Windows modules are all listed in the Windows category of modules, with the exception that the \"raw\", \"script\", and \"fetch\" modules are also available.  These modules do not start with a \"win\" prefix."
msgstr ""

#: ../../../rst/intro_windows.rst:214
msgid "Windows Contributions"
msgstr ""

#: ../../../rst/intro_windows.rst:216
msgid "Windows support in Ansible is still very new, and contributions are quite welcome, whether this is in the form of new modules, tweaks to existing modules, documentation, or something else.  Please stop by the ansible-devel mailing list if you would like to get involved and say hi."
msgstr ""

#: ../../../rst/intro_windows.rst:221
msgid ":doc:`developing_modules`"
msgstr ""

#: ../../../rst/intro_windows.rst:222
msgid "How to write modules"
msgstr ""

#: ../../../rst/intro_windows.rst:223
msgid ":doc:`playbooks`"
msgstr ""

#: ../../../rst/intro_windows.rst:224
msgid "Learning ansible's configuration management language"
msgstr ""

#: ../../../rst/intro_windows.rst:225
msgid "`List of Windows Modules <http://docs.ansible.com/list_of_windows_modules.html>`_"
msgstr ""

#: ../../../rst/intro_windows.rst:226
msgid "Windows specific module list, all implemented in PowerShell"
msgstr ""

#: ../../../rst/intro_windows.rst:227
msgid "`Mailing List <http://groups.google.com/group/ansible-project>`_"
msgstr ""

#: ../../../rst/intro_windows.rst:228
msgid "Questions? Help? Ideas?  Stop by the list on Google Groups"
msgstr ""

#: ../../../rst/intro_windows.rst:229
msgid "`irc.freenode.net <http://irc.freenode.net>`_"
msgstr ""

#: ../../../rst/intro_windows.rst:230
msgid "#ansible IRC chat channel"
msgstr ""

